plugins {
    id ("com.android.application")
    id ("kotlin-android")
    id("kotlin-kapt")
    id ("de.mannodermaus.android-junit5")
    id("jacoco")
}

jacoco {
    toolVersion = "0.8.7"
}

tasks.withType(Test) {
    jacoco {
        includeNoLocationClasses = true
        excludes = ['jdk.internal.*'] // Allows it to run on Java 11
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$[0-9].*'
    ]
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "$buildDir", includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
              ],
            excludes: ['hos.houns.weatherapp.presentation/**',
                 'hos.houns.weatherapp.localstore.database/**',
                 'hos.houns.weatherapp.databinding/**',
                 'androidx.databinding'
         ]))

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: 'hos.houns.weatherapp.presentation/**',
                    'hos.houns.weatherapp.localstore.database/**',
                    'hos.houns.weatherapp.databinding/**',
                    'androidx.databinding')
        }))
    }

}

android {

    lintOptions {
        disable 'TypographyFractions','TypographyQuotes','ObsoleteLintCustomCheck', 'NewApi','IconMissingDensityFolder'
        abortOnError false
    }


    buildFeatures {
        viewBinding true
    }

    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "hos.houns.weatherapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    buildTypes {
        debug{
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'

    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.0.0-beta07'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }

    testOptions {
        unitTests.all{
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }


}

dependencies {
    implementation ("androidx.multidex:multidex:2.0.1")
    implementation ("androidx.core:core-ktx:1.5.0")
    implementation ("androidx.appcompat:appcompat:1.3.0")
    implementation (CommonsDependencies.kotlinxCoroutinesCoreLib)
    implementation(CommonsDependencies.kotlinReflect)
    implementation(CommonsDependencies.lifecycleLivedataKtsLib)
    implementation(CommonsDependencies.koinCoreLib)
    implementation(CommonsDependencies.koinAndroidViewModelLib)
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.4.2")
    implementation(CommonsDependencies.jetBrainKotlinStdLib)
    implementation(CommonsDependencies.lifecycleViewmodelLib)
    implementation(CommonsDependencies.lifecycleRuntimeKtsLib)
    implementation(CommonsDependencies.lifecycleExtensionLib)
    implementation(CommonsDependencies.materialLib)
    implementation(CommonsDependencies.constraintLayoutLib)
    implementation(CommonsDependencies.okhttpLib)
    implementation(CommonsDependencies.retrofitLib)
    api(CommonsDependencies.gsonLib)
    implementation(CommonsDependencies.gsonConverterLib)
    implementation(CommonsDependencies.okhttLoggingInterceptorLib)
    implementation("androidx.activity:activity-ktx:1.3.0-alpha08")
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.libraries.places:places:2.4.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.test:core:1.3.0'


    def room_version = "2.3.0"

    implementation("androidx.room:room-runtime:$room_version")
    kapt "androidx.room:room-compiler:$room_version"
    implementation("androidx.room:room-ktx:$room_version")

    testImplementation(CommonsDependencies.mockkLib)
    testImplementation(CommonsDependencies.junitEngineLib)
    testImplementation(CommonsDependencies.junitAPiLib)
    testImplementation(CommonsDependencies.junitParamsLib)
    testRuntimeOnly(CommonsDependencies.junitJupiterEngineLib)
    testImplementation(CommonsDependencies.kluentLib)
    testImplementation(CommonsDependencies.junitLib)
    testRuntimeOnly(CommonsDependencies.junitVintageEngineLib)
    testRuntimeOnly(CommonsDependencies.kotlinReflect)
    runtimeOnly(CommonsDependencies.junitVintageEngineLib)
    runtimeOnly(CommonsDependencies.junitJupiterEngineLib)


    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    // Optional -- UI testing with Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    // Optional -- UI testing with UI Automator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

}